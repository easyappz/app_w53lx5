openapi: 3.0.3
info:
  title: Avitolog API
  version: 0.1.0
  description: |
    In-memory backend skeleton for "Avitolog". All endpoints use HTTP with JWT in Authorization header.
servers:
  - url: /
paths:
  /api/auth/register/:
    post:
      tags: [auth]
      summary: Register a new user
      description: Registers a user in in-memory storage and returns JWT token in response body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error / username exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/auth/login/:
    post:
      tags: [auth]
      summary: Login user
      description: Validates credentials against in-memory storage and returns JWT token in response body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials / validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/auth/me/:
    get:
      tags: [auth]
      summary: Get current user
      description: Returns the username of authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 64
        password:
          type: string
          minLength: 6
          maxLength: 128
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 64
        password:
          type: string
          minLength: 6
          maxLength: 128
    AuthResponse:
      type: object
      required: [username, token]
      properties:
        username:
          type: string
        token:
          type: string
          description: JWT token. Send as Authorization: Bearer <token>
    MeResponse:
      type: object
      required: [username]
      properties:
        username:
          type: string
    ErrorResponse:
      type: object
      required: [detail]
      properties:
        detail:
          type: string
